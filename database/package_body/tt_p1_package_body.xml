<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:n0="http://www.oracle.com/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
	http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
	<changeSet id="434eed4407989870fdba580139a06b74c191ff30" author="(APPS)-Generated" failOnError="false"   runOnChange="false" runAlways="false"  >
		<n0:createOraclePackageBody objectName="TT_P1" objectType="PACKAGE_BODY" ownerName="APPS"  replaceIfExists="false" >
			<n0:source><![CDATA[CREATE OR REPLACE EDITIONABLE PACKAGE BODY "%USER_NAME%"."TT_P1" as

   c_scope_prefix constant varchar2(31) := lower($$plsql_unit) || '.';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ PRIVATE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ PUBLIC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   procedure create_time_entry(
      p_task_id      in tt_task_list.id%type) is

      l_params          logger.tab_param;
      l_scope           logger_logs.scope%type := c_scope_prefix || 'create_time_entry';

   begin

      --I want to log debug messages only when debug mode is enabled in apex development page.
      if (tt_core.is_debug_on) then
         logger.append_param(l_params, 'p_task_id', p_task_id);

         logger.log('debug', l_scope, null, l_params);
      end if;

      update tt_time_entry t
      set t.end_dt = current_timestamp
      where 1 = 1
      and t.end_dt is null
      and t.created_by = tt_core.get_session_user;

      insert into tt_time_entry (
         task_id
      )
      values (
         p_task_id
      );

      commit;

      exception
         when others then
            logger.log_error('Unhandled Exception', l_scope, null, l_params);
            raise;
   end create_time_entry;
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

end tt_p1;
/]]></n0:source>
		</n0:createOraclePackageBody>
	</changeSet>
</databaseChangeLog>
